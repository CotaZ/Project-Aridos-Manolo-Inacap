use("Aridos_Manolo")

db.users.drop()

db.createCollection("users", {
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['email', 'password', 'role'],
            additionalProperties: true,
            properties: {
                name: {
                    bsonType: 'string',
                    description: "'name' must be a string and is required"
                },
                last_name: {
                    bsonType: 'string',
                    description: "'lastname' must be a string and is required"
                },
                email: {
                    bsonType: 'string',
                    description: "'email' must be a string and is required",
                    pattern: "^[A-Za-z\\d.-]{1,}@[A-Za-z\\d.-]{1,}[.]{1}[A-Za-z\\d.-]{1,}$"
                },
                password: {
                    bsonType: 'string',
                    description: "'password' must be a string and is required",
                    pattern: "^.{16,40}$"
                },
                age: {
                    bsonType: 'number',
                    minimum: 18,
                    maximum: 99
                },
                isSingle: {
                    bsonType: 'bool'
                },
                role: {
                    enum: ['customer', 'seller', 'admin']
                },
                createdAt: {
                    bsonType: 'date', // Utiliza el tipo 'date' para almacenar la hora de creaci√≥n.
                    description: "'createdAt' must be a date and is required"
                }
            }
        }
    }
})


use("platzi_store")

db.products.find()
db.orders.findOne({ _id: ObjectId('64d18cbfd557627461ceda82')})