use("Aridos_Manolo")

db.getCollectionInfos()

db.runCommand({
    collMod: 'stadistics',
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['id_stadistic', 'id_income', 'id_expense'],
            additionalProperties: true,
            properties: {
                id_stadistic: {
                    bsonType: 'objectId',
                    description: "'id_stadistic' must be a string and is required"
                },
                id_income: {
                    bsonType: 'objectId',
                    description: "'id_income' must be a valid ObjectId and is required",
                    foreignField: 'id_income',
                    ref: 'income'
                },
                id_expense: {
                    bsonType: 'objectId',
                    description: "'id_expense' must be a valid ObjectId and is required",
                    foreignField: 'id_expense',
                    ref: 'expenses'
                }
            }
        }
    }
})

use("Aridos_Manolo")

db.getCollectionInfos()

db.runCommand({
    collMod: 'income',
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['id_income', 'createdAt', 'id_customer'],
            additionalProperties: true,
            properties: {
                id_income: {
                    bsonType: 'objectId',
                    description: "'id_income' must be a string and is required"
                },
                createdAt: {
                    bsonType: 'date', // Utiliza el tipo 'date' para almacenar la hora de creaci√≥n.
                    description: "'createdAt' must be a date and is required"
                },
                id_customer: {
                    bsonType: 'objectId',
                    description: "'id_customer' must be a valid ObjectId and is required",
                },
            }
        }
    }
})

use("Aridos_Manolo")

db.getCollectionInfos()

db.runCommand({
    collMod: 'expenses',
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            required: ['id_expense', 'createdAt', 'id_supplier'],
            additionalProperties: true,
            properties: {
                id_expense: {
                    bsonType: 'objectId',
                    description: "'id_expense' must be a string and is required"
                },
                createdAt: {
                    bsonType: 'date',
                    description: "'createdAt' must be a date and is required"
                },
                id_supplier: {
                    bsonType: 'objectId',
                    description: "'id_supplier' must be a valid ObjectId and is required",
                }
            }
        }
    }
})